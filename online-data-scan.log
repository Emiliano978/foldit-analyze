------------------------------------------------
Recipe: "Recipe: Co bind struct correct"
Rating: {"points"=>"NODATA", "usage"=>"-1"}
Context: {"parent"=>"1", "children"=>0, "authors"=>{"gramps"=>{"solo"=>"51", "evolve"=>"157"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"1", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>1, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n"]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>4, :context=>["Co bind struct correct | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n", "http://fold.it/portal/recipe/31590", "http://fold.it/portal/node/990243"]}, "new"=>{:count=>1, :context=>["This recipe is an example of a use of new recipe \"autogen structure code\"http://fold.it/portal/recipe/31590"]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: Rav3n_pl Total FuzeR v2.0.1"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.8", "votes"=>"26"}
Context: {"parent"=>"1", "children"=>2, "authors"=>{"Rav3n_pl"=>{"solo"=>"26", "evolve"=>"75"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"0", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>2, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "Uses random Fuse algo to find points. Fixed loading best state at end."]}, "long"=>{:count=>1, :context=>["Rav3n_pl Total FuzeR v2.0.1Longer"]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["Rav3n_pl Total FuzeR v2.0.1 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>1, :context=>["Uses random Fuse algo to find points. Fixed loading best state at end."]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>1, :context=>["Rav3n_pl Total FuzeR v2.0.1Longer"]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>2, :context=>["Uses random Fuse algo to find points. Fixed loading best state at end.", "Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: tlaloc Repeat Settle 3.00"
Rating: {"usage"=>"5410", "points"=>nil, "avg"=>"4.7", "votes"=>"74"}
Context: {"parent"=>"1", "children"=>20, "authors"=>{"Tlaloc"=>{"solo"=>"172", "evolve"=>"177"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"4", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>4, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "It will always find some points. Early in the puzzle, it will find lots of points. In the end game, it will still generally find at least a fraction of a point.", "SandorÂ Arendse 177 14619", "MyZEnd_1_Fractions"]}, "long"=>{:count=>1, :context=>["I'm a newbie. Was about to give up on my beginner puzzle. A few others had done better on score, so knew it was possible. How? Did a Google search to find ways to get unstuck and fit to an alignment. Found tlaloc's suggested recipes. Amazing to watch the puzzle working away. Am up over 25 points after being stuck for a long time.  "]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>1, :context=>["I'm a newbie. Was about to give up on my beginner puzzle. A few others had done better on score, so knew it was possible. How? Did a Google search to find ways to get unstuck and fit to an alignment. Found tlaloc's suggested recipes. Amazing to watch the puzzle working away. Am up over 25 points after being stuck for a long time.  "]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>1, :context=>["Thanks!! "]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>5, :context=>["tlaloc Repeat Settle 3.00 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n", "http://fold.it/portal/recipe/1773", "It is written in Lua, rather the GUI scripting, and foldit doesn't let one be child of the other. The algorithm repeats until the structure stabilizes with only a minor point since the last repeat.", "This script will be absolutely necessary for any folder that hopes to achieve a good ranking. It tenaciously extracts points and \"gets the red out\", to allow you to focus on the larger picture."]}, "new"=>{:count=>2, :context=>["\n          Newbie unstuck        ", "I'm a newbie. Was about to give up on my beginner puzzle. A few others had done better on score, so knew it was possible. How? Did a Google search to find ways to get unstuck and fit to an alignment. Found tlaloc's suggested recipes. Amazing to watch the puzzle working away. Am up over 25 points after being stuck for a long time.  "]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>1, :context=>["It will always find some points. Early in the puzzle, it will find lots of points. In the end game, it will still generally find at least a fraction of a point."]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>1, :context=>["Fixxitguy 177 448"]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>2, :context=>["Contests", "Test"]}, "stabili"=>{:count=>1, :context=>["It is written in Lua, rather the GUI scripting, and foldit doesn't let one be child of the other. The algorithm repeats until the structure stabilizes with only a minor point since the last repeat."]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: Quake  shearing"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.7", "votes"=>"14"}
Context: {"parent"=>"1", "children"=>13, "authors"=>{"marie_s"=>{"solo"=>"46", "evolve"=>"177"}, "Rav3n_pl"=>{"solo"=>"26", "evolve"=>"75"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"5", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>1, :context=>["\n          for middle or end of game        "]}, "end"=>{:count=>2, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "\n          for middle or end of game        "]}, "long"=>{:count=>3, :context=>["Quake by slice along the axes of the part of protein with shearing effects", "Quake  shearing longer", "quake long run"]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>1, :context=>["Helped my score improve drastically (+100 points) when I ran it when I was stuck.\nTakes a long time, so run it when you are going to do something else."]}, "great"=>{:count=>3, :context=>["Thanks for this great recipe!\nMore than 50 points gained in a complete run in middle game. I was stuck, it improved my folding.", "\n          Wow, what a great recipe!        ", "Marie, you did a great job modifying the Quake Shearing predecessors!  This is my \"go to\" recipe when I need significant results.  Thank you for posting it!!"]}, "smart"=>{:count=>1, :context=>["Street Smarts"]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>3, :context=>["Thanks for this great recipe!\nMore than 50 points gained in a complete run in middle game. I was stuck, it improved my folding.", "Got a move on a \"stuck\" protein that nothing else would budge in the right direction. Thanks for posting it!", "Marie, you did a great job modifying the Quake Shearing predecessors!  This is my \"go to\" recipe when I need significant results.  Thank you for posting it!!"]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>2, :context=>["Marie, you did a great job modifying the Quake Shearing predecessors!  This is my \"go to\" recipe when I need significant results.  Thank you for posting it!!", "\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["Quake  shearing | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>1, :context=>["Helped my score improve drastically (+100 points) when I ran it when I was stuck.\nTakes a long time, so run it when you are going to do something else."]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>1, :context=>["Quake  shearing longer"]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: tlaloc Hydrophobe 3.00"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.7", "votes"=>"56"}
Context: {"parent"=>"1", "children"=>36, "authors"=>{"Tlaloc"=>{"solo"=>"172", "evolve"=>"177"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"6", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>2, :context=>["This pushes hydrophylic bands out, and pulls hydrophobic bands in. However, the band length prevents the structure from varying a lot from where it starts. If the structure is unstable, the bands prevent it from exploding, and lets it find its natural shape, which is very good after using the alignment tool and anything else that leaves the structure unstable. It also is useful to kick it out of a local minimum when you get stuck in the middle game.", "tlaloc  multistart"]}, "middle"=>{:count=>1, :context=>["This pushes hydrophylic bands out, and pulls hydrophobic bands in. However, the band length prevents the structure from varying a lot from where it starts. If the structure is unstable, the bands prevent it from exploding, and lets it find its natural shape, which is very good after using the alignment tool and anything else that leaves the structure unstable. It also is useful to kick it out of a local minimum when you get stuck in the middle game."]}, "end"=>{:count=>2, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "Creates a series of random bands. The bands strength is set to max, and the length is set to be within a small distance of the current length between the two segment endpoints of the band. Bands between hydrophobic segments are made shorter than they currently are. Bands between hydrophylic segments are longer than they currently are. It wiggles out, then disables bands and acquires the maximum score it can."]}, "long"=>{:count=>2, :context=>["Creates a series of random bands. The bands strength is set to max, and the length is set to be within a small distance of the current length between the two segment endpoints of the band. Bands between hydrophobic segments are made shorter than they currently are. Bands between hydrophylic segments are longer than they currently are. It wiggles out, then disables bands and acquires the maximum score it can.", "tlaloc Hydrophobe 3.00 - longer"]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>1, :context=>["Creates a series of random bands. The bands strength is set to max, and the length is set to be within a small distance of the current length between the two segment endpoints of the band. Bands between hydrophobic segments are made shorter than they currently are. Bands between hydrophylic segments are longer than they currently are. It wiggles out, then disables bands and acquires the maximum score it can."]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>1, :context=>["thanks for the help"]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>1, :context=>["tlaloc Hydrophobe forever"]}, "old"=>{:count=>3, :context=>["tlaloc Hydrophobe 3.00 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n", "just make sure you are logged in the same way to this site as you are to the foldit game, and you can then activate the add to cookbook option."]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>1, :context=>["tlaloc Hydrophobe BF fix"]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>3, :context=>["Contests", "ft tlaloc mod testing 1", "tlaloc Hydrophobe test"]}, "stabili"=>{:count=>1, :context=>["Pushes out hydrophyllic segments, pulls in hydrophobic segments. Good after threading to stabilize. Also good when stuck."]}, "longer"=>{:count=>2, :context=>["Creates a series of random bands. The bands strength is set to max, and the length is set to be within a small distance of the current length between the two segment endpoints of the band. Bands between hydrophobic segments are made shorter than they currently are. Bands between hydrophylic segments are longer than they currently are. It wiggles out, then disables bands and acquires the maximum score it can.", "tlaloc Hydrophobe 3.00 - longer"]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: Rav3n_pl GAB v0.4.1 stability"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.7", "votes"=>"29"}
Context: {"parent"=>"1", "children"=>3, "authors"=>{"Rav3n_pl"=>{"solo"=>"26", "evolve"=>"75"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"1", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>1, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n"]}, "long"=>{:count=>1, :context=>["Rav3n_pl GAB v0.4.1  (long)"]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["Rav3n_pl GAB v0.4.1 stability | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>7, :context=>["Rav3n_pl GAB v0.4.1 stability | Foldit", "\n   Recipe: Rav3n_pl GAB v0.4.1 stability   ", "Rav3n_pl GAB v0.4.1 stability", "Modded to seek stability in exploration puzzles. Genetic Algorithm on Bands. See script for details and options. ", "\n          stability        ", "It is same GAB, but it is set for seek stability on exploration puzzle.\nYou may want it if have low multiplier and wish NOT make it higher in cost of stability.", "ARav3n_pl GAB v0.4.1 stability"]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: Kuwaga Repeat Settle 0.93"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.7", "votes"=>"18"}
Context: {"parent"=>"1", "children"=>16, "authors"=>{"Kuwaga"=>{"solo"=>"14619", "evolve"=>"177"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"1", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>2, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "Chopsticks94 End Script v 0.1"]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>1, :context=>["add some points to your final score. use as a last resort"]}, "great"=>{:count=>2, :context=>["\n          A great recipe for getting        ", "A great recipe for getting the most out of your protein!\nHope to have you back again soon, Kuwaga."]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["Kuwaga Repeat Settle 0.93 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>1, :context=>["Fixxitguy 177 448"]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>2, :context=>["Contests", "Kuwaga Repeat Settle 0.93 test"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: Rav3n_pl GAB BiS Flu"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.7", "votes"=>"25"}
Context: {"parent"=>"1", "children"=>16, "authors"=>{"Rav3n_pl"=>{"solo"=>"26", "evolve"=>"75"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"2", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>1, :context=>["My_Start_Rav3n_pl GAB BiS Flu"]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>2, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "My_End_Rav3n_pl GAB BiS Flu"]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["Rav3n_pl GAB BiS Flu | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>1, :context=>["GAB banding to space all mutable segments by 1st sidechain atom. After pull it mutates once then stabilize."]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: Zero Length Bands v 1.0.3 -- Brow42"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.6", "votes"=>"17"}
Context: {"parent"=>"1", "children"=>2, "authors"=>{"brow42"=>{"solo"=>"54", "evolve"=>"144"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"1", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>3, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "This recipe is meant to assist with QTTN or other guided puzzles. You can band all the backbone and/or all the sidechains to their current position. You still have to drag the other ends where you want them.", "My_End_Zero Length Bands v 1.0.3 -- Brow42"]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["Zero Length Bands v 1.0.3 -- Brow42 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>1, :context=>["The random slider is experimental, it will BREAK your protein, hopefully unfreezing it, but fixable by a fuze."]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>2, :context=>["Creates zero-length bands on the backbone and sidechains, best for QTTN or guided puzzles. Can also randomize backbone to break frozen proteins.", "Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: Rav3n_pl Hydro PulleR v2"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.7", "votes"=>"64"}
Context: {"parent"=>"1", "children"=>14, "authors"=>{"Rav3n_pl"=>{"solo"=>"26", "evolve"=>"75"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"1", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>1, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n"]}, "long"=>{:count=>1, :context=>["Long Rav3n_pl Hydro PulleR v2"]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["Rav3n_pl Hydro PulleR v2 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: GA Bands 1.8"
Rating: {"usage"=>"17", "points"=>"-", "avg"=>"4.6", "votes"=>"84"}
Context: {"parent"=>"1", "children"=>21, "authors"=>{"Rav3n_pl"=>{"solo"=>"26", "evolve"=>"75"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"4", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>2, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "Lots of changes, all options at end"]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>1, :context=>["GA Bands 1.7.2 loss fast 0.3"]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>2, :context=>["Script is totally dropping (shown as -999 score) critter what have negative score around 1 pt. That set of bands not doing any change then we not need it to explore.", "- added \"loss\" option - score rebooted to best every generation not every critter (default disabled)\n- herd size adjusted to 2+3\n- all wiggles are always (2)\n- added S2H option - all bands have one end on sheet second on helix (disabled by default, can be used only on certain puzzles, need secundary structure to work)\n- more bands per critter"]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>2, :context=>["Script is totally dropping (shown as -999 score) critter what have negative score around 1 pt. That set of bands not doing any change then we not need it to explore.", "\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["GA Bands 1.8 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>2, :context=>["Best For", "- added \"loss\" option - score rebooted to best every generation not every critter (default disabled)\n- herd size adjusted to 2+3\n- all wiggles are always (2)\n- added S2H option - all bands have one end on sheet second on helix (disabled by default, can be used only on certain puzzles, need secundary structure to work)\n- more bands per critter"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: autogen structure code"
Rating: {"points"=>"NODATA", "usage"=>"-1"}
Context: {"parent"=>"1", "children"=>0, "authors"=>{"gramps"=>{"solo"=>"51", "evolve"=>"157"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"2", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>4, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "print(\"end -- function Restore_Structs\")", "end -- function Restore_Structs", "print(\"end \",newprog)"]}, "long"=>{:count=>1, :context=>["-- This will work as long as puzzle ligands are\n-- of structure type \"M\" and occur at the end\n-- of the puzzle.  If this changes then the following will\n-- require manual setting\n--\nlocal puzzle_num_ligands = 0\ndo -- start constructor for variable puzzle_num_ligands\n  local seg_no = get_segment_count()\n  while get_ss(seg_no) == \"M\" do -- M ligands happen at end\n    puzzle_num_ligands = puzzle_num_ligands + 1\n    seg_no = seg_no - 1\n  end\nend -- end of constructor for variable puzzle_num_ligands"]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>1, :context=>["Thank-you tyler0911!"]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>7, :context=>["autogen structure code | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n", "http://fold.it/portal/recipe/30483", "print(\"\") -- generate function that restores old structures\nprint(\"function Restore_Structs()\")\nprint(\"\")\ncurrent_struct_begin = 1\ncurrent_struct = get_ss(1)\nfor x=2,puzzle_last_seg-1 do\n  if get_ss(x) ~= current_struct then\n    if (Struct_Types[current_struct] == \"Sheet\") or\n       (Struct_Types[current_struct] == \"Helix\") then\n      -- generate code to restore structure just past\n      print(\"  select_index_range(\", current_struct_begin, \",\",\n        x - 1, \")\")\n      print(\"  print(\\\"\", Struct_Types[current_struct], \"(\",\n        current_struct_begin, \",\" , x - 1, \")\\\")\")\n      print(\"  replace_ss(\\\"\", current_struct, \"\\\")\")\n      print(\"  deselect_all()\")\n      print(\"\")\n    end\n    current_struct_begin = x\n    current_struct = get_ss(x)\n  end\nend", "http://fold.it/portal/recipe/31591", "\n          foldit data default on XP        ", "C:\\Documents and Settings\\All User\\Application Data\\Foldit"]}, "new"=>{:count=>3, :context=>["newprog = \"autogenerated\" -- change name of autogenerated program here\n--\n-- autogenerated code", "print(\"begin \",newprog)", "print(\"end \",newprog)"]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>4, :context=>["print(\"\") -- generate function that restores old structures\nprint(\"function Restore_Structs()\")\nprint(\"\")\ncurrent_struct_begin = 1\ncurrent_struct = get_ss(1)\nfor x=2,puzzle_last_seg-1 do\n  if get_ss(x) ~= current_struct then\n    if (Struct_Types[current_struct] == \"Sheet\") or\n       (Struct_Types[current_struct] == \"Helix\") then\n      -- generate code to restore structure just past\n      print(\"  select_index_range(\", current_struct_begin, \",\",\n        x - 1, \")\")\n      print(\"  print(\\\"\", Struct_Types[current_struct], \"(\",\n        current_struct_begin, \",\" , x - 1, \")\\\")\")\n      print(\"  replace_ss(\\\"\", current_struct, \"\\\")\")\n      print(\"  deselect_all()\")\n      print(\"\")\n    end\n    current_struct_begin = x\n    current_struct = get_ss(x)\n  end\nend", "print(\"end -- function Restore_Structs\")", "function Restore_Structs()", "end -- function Restore_Structs"]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: Rav Compress 2.2.1 for Symmetry -- Brow42"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.4", "votes"=>"5"}
Context: {"parent"=>"1", "children"=>1, "authors"=>{"brow42"=>{"solo"=>"54", "evolve"=>"144"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"1", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>1, :context=>["Compress for symmetry will band segments to other segments OR other bands. The endpoints (not the start points) of any bands that you have drawn before you start the script, will be used for random compression bands just like other segments. These can be bands that you drew to symmetry segments, or to points in space that you'd like to be part of the compression. If the endpoint is attached to a segment, then the compression band will also be attached to the segment, even if it is a mirror segment!"]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>4, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "Rav3n_pl Comp 2.2 modified to use band endpoints as compression targets. Could be BiS or symmetry segments!", "Compress for symmetry will band segments to other segments OR other bands. The endpoints (not the start points) of any bands that you have drawn before you start the script, will be used for random compression bands just like other segments. These can be bands that you drew to symmetry segments, or to points in space that you'd like to be part of the compression. If the endpoint is attached to a segment, then the compression band will also be attached to the segment, even if it is a mirror segment!", "Band endpoints don't quite behave the same as segments (yet): They ignore minimum distance, segment skipping, and all structure checks for structure-mode compression. Because segment-to-segment bands still have to pass all these checks, you may actually get many more segment-to-band than segment-to-segment!"]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["Rav Compress 2.2.1 for Symmetry -- Brow42 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>1, :context=>["It can be a lot of work to make all those bands. You don't have to band every symmetry segment (in fact, I advise against it, see below). However, you only have to do it once. The bands will be automatically disabled, and never deleted by the script. All the new compression bands WILL be deleted, even if you cancel the script!"]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>1, :context=>["Once upon a time, you could run compression scripts on symmetry puzzles, which was cool, but other scripts would crash, which was not. The fix was to make symmetry segments invisible to scripts. So now we had to move things by hand with the move tool, which I'm not very good at. This is a hack, but it works!"]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>1, :context=>["Rav3n_pl Comp 2.2 modified to use band endpoints as compression targets. Could be BiS or symmetry segments!"]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: tlaloc Band Explorer 1.03"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.8", "votes"=>"4"}
Context: {"parent"=>"1", "children"=>0, "authors"=>{"Tlaloc"=>{"solo"=>"172", "evolve"=>"177"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"0", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>1, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n"]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["tlaloc Band Explorer 1.03 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: GA Bands 2.5  H-1-5"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.6", "votes"=>"87"}
Context: {"parent"=>"1", "children"=>17, "authors"=>{"Rav3n_pl"=>{"solo"=>"26", "evolve"=>"75"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"1", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>3, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "at end of script.", "LemonÂ Friend 153 94"]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["GA Bands 2.5  H-1-5 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: Blue Fuse v1.1"
Rating: {"usage"=>"73102", "points"=>nil, "avg"=>"4.5", "votes"=>"423"}
Context: {"parent"=>"1", "children"=>56, "authors"=>{"vertex"=>{"solo"=>"154", "evolve"=>"145"}, "StevenÂ Pletsch"=>{"solo"=>"119", "evolve"=>"165"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"4", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>4, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "one of my favourite, really! Works in end-game too, got me from rank 20 to 10 in one time.\nAlso try to use it different times one after the other..", "\n          recommended!        ", "bendbob 52 47"]}, "long"=>{:count=>1, :context=>["Blue Fuse v1.1 ~longer"]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>1, :context=>["Specifically for new puzzle launch. A quick and brutal bounce. No proteins were harmed in the development of this script."]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>1, :context=>["Great work vertex "]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["Blue Fuse v1.1 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>1, :context=>["Specifically for new puzzle launch. A quick and brutal bounce. No proteins were harmed in the development of this script."]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>2, :context=>[" restore recent best", " restore very best"]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>3, :context=>["Contests", "Blue Fuse v1.1 test", "test"]}, "stabili"=>{:count=>1, :context=>[" Stabilize Protein"]}, "longer"=>{:count=>1, :context=>["Blue Fuse v1.1 ~longer"]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>4, :context=>["Best For", " restore recent best", " restore very best", "Blue Fuse v1.1 credit best"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: Rav3n_pl GAB v2.0.5"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.8", "votes"=>"26"}
Context: {"parent"=>"1", "children"=>3, "authors"=>{"Rav3n_pl"=>{"solo"=>"26", "evolve"=>"75"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"5", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>2, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "Please send me XML form script log when it will crash again. I need retrace it."]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>2, :context=>["\n          Wrokss well, and fast. I will        ", "Wrokss well, and fast. I will be top on my list of recipes to use!"]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>1, :context=>["No worries Rav, got it past the error. Thanks for all the GREAT!!!! recipes you produce."]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>1, :context=>["No worries Rav, got it past the error. Thanks for all the GREAT!!!! recipes you produce."]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>2, :context=>["Please send me XML form script log when it will crash again. I need retrace it.", "\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["Rav3n_pl GAB v2.0.5 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>1, :context=>["Newton's Cradle"]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: Loop rebuild  2.0"
Rating: {"usage"=>"9214", "points"=>nil, "avg"=>"4.9", "votes"=>"36"}
Context: {"parent"=>"1", "children"=>194, "authors"=>{"spvincent"=>{"solo"=>"55", "evolve"=>"49"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"7", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>31, :context=>["2) Allows you to work on a specific area of the protein rather than the whole thing. Change the values of min_residue and max_residue to limit the area, perhaps the start and end of a big loop, upon which loop rebuild will act. Don't forget to set these values back as directed in the script.", "function  WiggleShakeWiggle ( start_idx , end_idx )", "function  post_rebuild (  score_after_rebuild , threshold_a ,  threshold_b , start_idx , end_idx )", "    curr_score = WiggleShakeWiggle ( start_idx , end_idx )", "        --   Now try shaking at start if we didn't already do so", "                curr_score = WiggleShakeWiggle ( start_idx  , end_idx )", "    --    The point of  this Coprime, start_idx business is so we go through the protein in  a\n    --    nonuniform way. Rather than rebuilding 1-4, 2-5 , 3-6 for example, we might do 21 4, 53-57, 3-6\n    --    or something like  that", "        end_idx = start_idx + rebuild_length - 1", "        if (  start_idx >= min_residue and  end_idx <= max_residue and\n                    ( loops_only == false or IsSegmentALoop ( start_idx , end_idx  ) == true ) ) then", "            print (  \"rb \", rb , \" \" , start_idx  ,\"-\" ,  end_idx ,  \" (\"  ,i , \"/\" , n_possible_segs , \")\"  )", "                if ( post_rebuild ( score_after_rebuild  ,  investigate_alternates_threshold , delta , start_idx , end_idx  ) == true ) then", "                    if ( start_idx > 1 ) then\n                        select_index  ( start_idx - 1 )\n                    end", "      start_idx = start_idx + inc\n      if ( start_idx >  n_possible_segs ) then\n          start_idx =  start_idx - n_possible_segs\n      end", "if ( start_from_best == true ) then\n  restore_abs_best ()\nend", "if ( start_score  == 0 ) then\n    print ( \"Suggest quitting as starting score < = 0\" )\nend", "Loop rebuild  2.0 start 54", "Loop rebuild  2.0  start 54", "Loop rebuild  2.0 start102", "Loop rebuild  2.0 start19", "Loop rebuild  2.0 start115", "Loop rebuild  2.0  start29", "Loop rebuild  2.0 start32", "Loop rebuild  2.0 start81", "Loop rebuild  2.0 start80", "Loop rebuild  2.0 loop only start=31", "Loop rebuild  2.0 start 16", "Loop rebuild  2.0 start 30", "Loop rebuild  2.0 start 60", "Loop rebuild  2.0 StartAt11", "NG Loop rebuild  2.0 StartIndex11", "Loop rebuild  2.0 start idx = 11"]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>33, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "Contenders", "2) Allows you to work on a specific area of the protein rather than the whole thing. Change the values of min_residue and max_residue to limit the area, perhaps the start and end of a big loop, upon which loop rebuild will act. Don't forget to set these values back as directed in the script.", "Contenders", "end", "end", "end", "end", "end", "end", "function  WiggleShakeWiggle ( start_idx , end_idx )", "end", "function  post_rebuild (  score_after_rebuild , threshold_a ,  threshold_b , start_idx , end_idx )", "    curr_score = WiggleShakeWiggle ( start_idx , end_idx )", "                curr_score = WiggleShakeWiggle ( start_idx  , end_idx )", "            end", "        end", "    end", "end", "        end_idx = start_idx + rebuild_length - 1", "        if (  start_idx >= min_residue and  end_idx <= max_residue and\n                    ( loops_only == false or IsSegmentALoop ( start_idx , end_idx  ) == true ) ) then", "            print (  \"rb \", rb , \" \" , start_idx  ,\"-\" ,  end_idx ,  \" (\"  ,i , \"/\" , n_possible_segs , \")\"  )", "                if ( post_rebuild ( score_after_rebuild  ,  investigate_alternates_threshold , delta , start_idx , end_idx  ) == true ) then", "                end", "                    if ( end_idx <  n ) then\n                        select_index ( end_idx + 1 )\n                    end", "            end    -- if first rebuild worked", "        end", "    end        --    for i\n    return false\nend", "Contenders", "Loop rebuild  2.0fullend", "bendbob 52 47", "Zeckendorff 177 8836", "LemonÂ Friend 153 94"]}, "long"=>{:count=>9, :context=>["As long as we can't load recipes, could you paste it as text, please?", "Loop rebuild  2.0 long reb", "Loop rebuild  2.0 long reb", "Loop rebuild  2.0 long", "Loop rebuild  2.0 long", "Loop rebuild  2.0 long segmnt", "Loop rebuild  2.0 lONG", "Loop rebuild  2.0 - bigger, longer", "Loop rebuild  2.0 -  longer"]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>6, :context=>["4) Stores, in Quicksave slot 10, the post-rebuild structure that lead to the highest score that did not create a new best score. The rebuild area in question will be bracketed by frozen residues for easy identification. The idea is that, whether or not this script produces a gain, the user can load the structure in Quicksave 10 (Open/Share solutions: ensure the Show auto and quick saves box is checked) and try alternative post-rebuild techniques such as local wiggling the rebuild section or stopping the wiggle before completion.", "--    Stores the  best non-improved structure in Quicksave slot 10. The structure that's saved is the\n--    the best before WS etc, so if this script fails to produce (or even if it does) you can load the structure  in\n--    slot 10 and try WS in different ways.", "        quickload ( 2 )", "                quicksave ( 2 )", "                        quicksave ( 1 )\n                        print ( \"Improvement to \",  best_score )\n                    end", "                    quicksave ( 10 )\n                 end"]}, "score"=>{:count=>40, :context=>["3) If a rebuild plus subsequent recovery comes close to or exceeds the best score, it'll try an alternative recovery technique and pick the best of the two.", "4) Stores, in Quicksave slot 10, the post-rebuild structure that lead to the highest score that did not create a new best score. The rebuild area in question will be bracketed by frozen residues for easy identification. The idea is that, whether or not this script produces a gain, the user can load the structure in Quicksave 10 (Open/Share solutions: ensure the Show auto and quick saves box is checked) and try alternative post-rebuild techniques such as local wiggling the rebuild section or stopping the wiggle before completion.", "        c = get_score ()\n        reset_recent_best()", "     -- returns the score after doing a WSW:  shortcircuiting if things don't look promising", "    score_a = get_score ()", "    if ( score_after_wiggle - score_a  < 10 and best_score - score_after_wiggle > 30 ) then\n        --    The wiggle got stuck and didn't achieve anything\n        nudge ()\n        score_after_wiggle = get_score ()\n    end", "    if ( best_score - score_after_wiggle  > 100 ) then\n        -- Not worth continuing\n       return  score_after_wiggle\n    end", "    score_after_second_shake = get_score ()", "    if ( score_after_second_shake - score_after_wiggle > 0.5 ) then\n        do_global_wiggle_all ( 10 )\n        score_after_second_wiggle = get_score ()", "        if (  score_after_second_wiggle - score_after_second_shake  < 1  and best_score  - score_after_second_wiggle < 50 ) then", "            score = get_score  ()", "            return  score\n        else\n            return  score_after_second_wiggle\n        end\n    else\n        return score_after_second_shake\n    end", "function  post_rebuild (  score_after_rebuild , threshold_a ,  threshold_b , start_idx , end_idx )", "    --  If  the first recovery attempt results in a score that is less than the best score by a value\n    --  of threshold_a or less, then try  alternative strategies", "    if ( best_score - score_after_rebuild > 3000 ) then\n       do_shake (  2 )\n        initial_shake = true\n    elseif  ( best_score - score_after_rebuild > 1500 ) then\n        do_shake ( 1 )\n        initial_shake = true\n    else\n        initial_shake = false\n    end", "    curr_score = WiggleShakeWiggle ( start_idx , end_idx )", "    best_recovery_score = curr_score\n    quicksave ( 3 )", "    if (  best_score - curr_score <  threshold_a ) then", "        best_recovery_score = curr_score\n        quicksave ( 3 )", "            score_before_shake = get_score ()\n            do_shake ( 1 )\n            score_after_shake = get_score ()", "            if ( score_after_shake - score_before_shake > 0.1  ) then", "                curr_score = WiggleShakeWiggle ( start_idx  , end_idx )", "                if ( curr_score > best_recovery_score ) then\n                    if ( monit ) then\n                        print ( \"Second better\" )\n                    end", "                    best_recovery_score = curr_score\n                    quicksave  ( 3 )\n                 else\n                     if ( monit ) then\n                        print ( \"First better\" )\n                    end\n                end", "    if ( best_score - best_recovery_score < threshold_b ) then\n        quickload ( 3 )\n        return true\n      else\n        return false\n    end", "            best_score = get_score ()", "            if ( score_after_rebuild ~= best_score ) then", "                -- If  the scores are  still equal  we probably have a locked segment", "                score_after_rebuild = get_score ()", "                if ( best_score - score_after_rebuild  < 20 ) then\n                    delta = 0.01\n                 elseif ( rebuild_length >= 6 ) then\n                     delta = 10\n                 elseif ( rebuild_length == 5 ) then\n                    delta =  7\n                 elseif ( rebuild_length == 4 ) then\n                     delta = 5\n                  else\n                     delta = 2\n                end", "                if ( post_rebuild ( score_after_rebuild  ,  investigate_alternates_threshold , delta , start_idx , end_idx  ) == true ) then", "                    if ( curr_score > best_score ) then", "                        curr_score =  get_score ()", "                        best_score = curr_score", "                curr_score = get_score ()", "                if (  curr_score > qs10_best_score  and improvement_made == false ) then\n                    qs10_best_score = curr_score\n                    quickload ( 2 )", "best_score = get_score ()\nprint (  \"Start score : \" , best_score )", "if ( start_score  == 0 ) then\n    print ( \"Suggest quitting as starting score < = 0\" )\nend", "qs10_best_score = 0", "Hey, I greatly appreciate your work on this recipe. It's raised MANY of my scores by a lot.\nI'm not sure if I'm now doing something wrong, but when it gets to the step, \"load_structure\" it just stops. Is it possible for me to get a bit of an explanation for what this step does? For example, right now I'm behind an internet blocking service. Does that step require the internet?\nThank you for your help and your work in this program,\nMatt."]}, "great"=>{:count=>2, :context=>["Great script.  Combinded with The other two and\nrepeated application between them raised my score from 9093 to 9350.", "Hey, I greatly appreciate your work on this recipe. It's raised MANY of my scores by a lot.\nI'm not sure if I'm now doing something wrong, but when it gets to the step, \"load_structure\" it just stops. Is it possible for me to get a bit of an explanation for what this step does? For example, right now I'm behind an internet blocking service. Does that step require the internet?\nThank you for your help and your work in this program,\nMatt."]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>1, :context=>["         if ( initial_shake == false ) then"]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>4, :context=>["1) By default, runs forever (useful for running overnight). If you don't like this, change the value of loop_forever to false.", "Loop rebuild  2.0 rebuild 51-69 forever", "Loop rebuild  2.0 (not forever)", "Loop rebuild  2.0  not forever"]}, "old"=>{:count=>13, :context=>["Loop rebuild  2.0 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n", "function  post_rebuild (  score_after_rebuild , threshold_a ,  threshold_b , start_idx , end_idx )", "    if (  best_score - curr_score <  threshold_a ) then", "    if ( best_score - best_recovery_score < threshold_b ) then\n        quickload ( 3 )\n        return true\n      else\n        return false\n    end", "                investigate_alternates_threshold = 2*delta", "                if ( investigate_alternates_threshold < 10 ) then\n                    investigate_alternates_threshold = 10\n                end", "                if ( post_rebuild ( score_after_rebuild  ,  investigate_alternates_threshold , delta , start_idx , end_idx  ) == true ) then", "Can we still not add recipes (I can't, tells me torun foldit, though it it running)?\nMerci.", "foldithl1 177 777", "Petrifolder 177 248", "PhillipÂ JÂ Fold 177 6419", "Terafold 103 101"]}, "new"=>{:count=>4, :context=>["New! Improved! Washes whiter! See  first comment for details.", "4) Stores, in Quicksave slot 10, the post-rebuild structure that lead to the highest score that did not create a new best score. The rebuild area in question will be bracketed by frozen residues for easy identification. The idea is that, whether or not this script produces a gain, the user can load the structure in Quicksave 10 (Open/Share solutions: ensure the Show auto and quick saves box is checked) and try alternative post-rebuild techniques such as local wiggling the rebuild section or stopping the wiggle before completion.", "Loop rebuild  2.0 NEW", "Loop rebuild  2.0 just for newcomer"]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>1, :context=>["                -- Compute a value delta which will be used later to determine if we are\n                -- \"sufficiently\" close to  our original  best score.  If it turns out later that\n                -- we are, then either stop  if stop _if_close is true or  nudge it around"]}, "improve"=>{:count=>5, :context=>["New! Improved! Washes whiter! See  first comment for details.", "--    Stores the  best non-improved structure in Quicksave slot 10. The structure that's saved is the\n--    the best before WS etc, so if this script fails to produce (or even if it does) you can load the structure  in\n--    slot 10 and try WS in different ways.", "        improvement_made = false", "                        improvement_made = true", "                if (  curr_score > qs10_best_score  and improvement_made == false ) then\n                    qs10_best_score = curr_score\n                    quickload ( 2 )"]}, "restore"=>{:count=>2, :context=>["function RestoreStructure ( first , last )", "    restore_recent_best ()        -- In case the above machinations made things worse"]}, "fix"=>{:count=>2, :context=>["Loop rebuild  2.0 sidechain fixed", "Fixxitguy 177 448"]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>14, :context=>["Contests", "Loop rebuild  2.0_test", "Loop rebuild  2.0 test", "Loop rebuild  2.0 test", "Loop rebuild  2.0 test", "Loop rebuild  2.0 test", "Loop rebuild  2.0_test", "Loop rebuild  2.0_test", "Loop rebuild  2.0 test", "Loop rebuild  2.0 test", "Loop rebuild  2.0 test", "Loop rebuild  2.0 test dja", "Loop rebuild  2.0 - test1", "Loop rebuild  2.0 test1"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>2, :context=>["Loop rebuild  2.0 - bigger, longer", "Loop rebuild  2.0 -  longer"]}, "modifi"=>{:count=>1, :context=>["Loop rebuild  2.0 - TG modified"]}, "best"=>{:count=>28, :context=>["Best For", "3) If a rebuild plus subsequent recovery comes close to or exceeds the best score, it'll try an alternative recovery technique and pick the best of the two.", "4) Stores, in Quicksave slot 10, the post-rebuild structure that lead to the highest score that did not create a new best score. The rebuild area in question will be bracketed by frozen residues for easy identification. The idea is that, whether or not this script produces a gain, the user can load the structure in Quicksave 10 (Open/Share solutions: ensure the Show auto and quick saves box is checked) and try alternative post-rebuild techniques such as local wiggling the rebuild section or stopping the wiggle before completion.", "--    Stores the  best non-improved structure in Quicksave slot 10. The structure that's saved is the\n--    the best before WS etc, so if this script fails to produce (or even if it does) you can load the structure  in\n--    slot 10 and try WS in different ways.", "    reset_recent_best ()\n    select_all  ()\n    set_behavior_clash_importance ( 0.05 )\n    do_shake ( 1 )\n    set_behavior_clash_importance ( 1 )\n    do_global_wiggle_all ( 8 )", "    restore_recent_best ()        -- In case the above machinations made things worse", "    if ( score_after_wiggle - score_a  < 10 and best_score - score_after_wiggle > 30 ) then\n        --    The wiggle got stuck and didn't achieve anything\n        nudge ()\n        score_after_wiggle = get_score ()\n    end", "    if ( best_score - score_after_wiggle  > 100 ) then\n        -- Not worth continuing\n       return  score_after_wiggle\n    end", "        if (  score_after_second_wiggle - score_after_second_shake  < 1  and best_score  - score_after_second_wiggle < 50 ) then", "            reset_recent_best ()\n            nudge ( )\n            restore_recent_best ()", "    --  If  the first recovery attempt results in a score that is less than the best score by a value\n    --  of threshold_a or less, then try  alternative strategies", "    if ( best_score - score_after_rebuild > 3000 ) then\n       do_shake (  2 )\n        initial_shake = true\n    elseif  ( best_score - score_after_rebuild > 1500 ) then\n        do_shake ( 1 )\n        initial_shake = true\n    else\n        initial_shake = false\n    end", "    best_recovery_score = curr_score\n    quicksave ( 3 )", "    if (  best_score - curr_score <  threshold_a ) then", "        best_recovery_score = curr_score\n        quicksave ( 3 )", "                if ( curr_score > best_recovery_score ) then\n                    if ( monit ) then\n                        print ( \"Second better\" )\n                    end", "                    best_recovery_score = curr_score\n                    quicksave  ( 3 )\n                 else\n                     if ( monit ) then\n                        print ( \"First better\" )\n                    end\n                end", "    if ( best_score - best_recovery_score < threshold_b ) then\n        quickload ( 3 )\n        return true\n      else\n        return false\n    end", "            best_score = get_score ()", "            if ( score_after_rebuild ~= best_score ) then", "                reset_recent_best ()\n                if (  number_of_rebuilds > 1 ) then\n                    do_local_rebuild ( number_of_rebuilds  - 1 )\n                    restore_recent_best ()\n                end", "                if ( best_score - score_after_rebuild  < 20 ) then\n                    delta = 0.01\n                 elseif ( rebuild_length >= 6 ) then\n                     delta = 10\n                 elseif ( rebuild_length == 5 ) then\n                    delta =  7\n                 elseif ( rebuild_length == 4 ) then\n                     delta = 5\n                  else\n                     delta = 2\n                end", "                    if ( curr_score > best_score ) then", "                        best_score = curr_score", "                if (  curr_score > qs10_best_score  and improvement_made == false ) then\n                    qs10_best_score = curr_score\n                    quickload ( 2 )", "if ( start_from_best == true ) then\n  restore_abs_best ()\nend", "best_score = get_score ()\nprint (  \"Start score : \" , best_score )", "qs10_best_score = 0"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: tlaloc Make Denovo 3.00"
Rating: {"usage"=>"277", "points"=>"-", "avg"=>"4.8", "votes"=>"12"}
Context: {"parent"=>"1", "children"=>5, "authors"=>{"Tlaloc"=>{"solo"=>"172", "evolve"=>"177"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"0", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>2, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "Takes a protein and completely straightens it out. You will lose your entire structure. You may need to hit the 'home' key to recenter after it is done. Saves the previous protein to quicksave slot 1. Ctrl+1 will get it back, but recommend saving before running this."]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>1, :context=>["Takes a protein and completely straightens it out. You will lose your entire structure. You may need to hit the 'home' key to recenter after it is done. Saves the previous protein to quicksave slot 1. Ctrl+1 will get it back, but recommend saving before running this."]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>2, :context=>["Takes a protein and completely straightens it out. You will lose your entire structure. You may need to hit the 'home' key to recenter after it is done. Saves the previous protein to quicksave slot 1. Ctrl+1 will get it back, but recommend saving before running this.", "\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["tlaloc Make Denovo 3.00 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: V2 Rav3n_pl Total FuzeR v1.1"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.9", "votes"=>"14"}
Context: {"parent"=>"1", "children"=>2, "authors"=>{"CharlieFortsCon..."=>{"solo"=>"69", "evolve"=>"36"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"0", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>1, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n"]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["V2 Rav3n_pl Total FuzeR v1.1 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>1, :context=>["Contests"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: tlaloc Mutate All 3.04"
Rating: {"usage"=>"1577", "points"=>"-", "avg"=>"4.8", "votes"=>"27"}
Context: {"parent"=>"1", "children"=>17, "authors"=>{"Tlaloc"=>{"solo"=>"172", "evolve"=>"177"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"4", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>0, :context=>[]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>1, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n"]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>0, :context=>[]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>2, :context=>["\n          Version 3.02 fixed some bugs        ", "I made major changes for version 3.02 fixing the bug Gary mentioned, which actually uncovered a few other problems. Should work better now."]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>5, :context=>["tlaloc Mutate All 3.04 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n", "http://fold.it/portal/node/988385", "                for iSidechains=1, foldit.GetSidechainSnapCount(i) do\n                    foldit.SidechainSnap(i, iSidechains)\n                    fsl.WiggleAll(iterations)\n                end", "                for iSidechains=1, foldit.GetSidechainSnapCount(segment) do\n                    foldit.SidechainSnap(segment, iSidechains)\n                    fsl.WiggleAll(iterations)\n                end"]}, "new"=>{:count=>0, :context=>[]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>2, :context=>["\n          Version 3.02 fixed some bugs        ", "I made major changes for version 3.02 fixing the bug Gary mentioned, which actually uncovered a few other problems. Should work better now."]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>3, :context=>["Contests", "Must have been somet impatient people, which abandoned the mutable test, if I look at the average impact.\nIf you do mutating with recent best, worst case is an eqal result like before.\nA vote again for changing the way how impact is calculated.http://fold.it/portal/node/988385", "test"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>1, :context=>["modified tlaloc Mutate All 3.04"]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: QuakeR 2.51"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.8", "votes"=>"40"}
Context: {"parent"=>"1", "children"=>62, "authors"=>{"Rav3n_pl"=>{"solo"=>"26", "evolve"=>"75"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"5", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>3, :context=>["- random seed is using fractions form score, so just wiggle sidechains if you totally stuck and want to start over\n- after pulling is started qStab, then if score is close to best PinkFuze (quadriple fuze form CG303 GAB III) is started", "If you stuck, b4 you start it again wiggle sidechains to randomize bands order.", "- added \"remember\" of last strength of bands to start with on next pull (first pull is always form 0.1)\n- added optional max band strength\n- cleaned code a little (mostly in math and random)\n- wiggles are always (2) shake is (1)\n- lower default doFuze (from 10 to 5) - fuze is started only if we 5pts or less close to best score"]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>4, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "QuakeR - a randomized Quake.  Options at end.", "All options described at end of script.", "LemonÂ Friend 153 94"]}, "long"=>{:count=>2, :context=>["QuakeR 2.3Long", "QuakeR 2.4 long"]}, "fast"=>{:count=>1, :context=>["It should be pretty faster now :)"]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>2, :context=>["- random seed is using fractions form score, so just wiggle sidechains if you totally stuck and want to start over\n- after pulling is started qStab, then if score is close to best PinkFuze (quadriple fuze form CG303 GAB III) is started", "fixed score issue"]}, "great"=>{:count=>0, :context=>[]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>0, :context=>[]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>1, :context=>["QuakeR 2.4 - forever"]}, "old"=>{:count=>6, :context=>["QuakeR 2.51 | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n", "FoldPrefect 177 6419", "foldithl1 177 777", "Gold128 177 14619", "PhillipÂ JÂ Fold 177 6419"]}, "new"=>{:count=>1, :context=>["QuakeR 2.4 EXP NEW"]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>0, :context=>[]}, "late"=>{:count=>0, :context=>[]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>1, :context=>["fixed score issue"]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>5, :context=>["Contests", "testQuakeR 2.3", "testQuakeR 2.3", "testQuakeR 2.3", "QuakeR 2.51 test"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>2, :context=>["QuakeR 2.51 (modified)", "QuakeR 2.51 (modified)"]}, "best"=>{:count=>2, :context=>["Best For", "- added save recent best (sometimes it misses fractions from last pulling)\n- changed output (less)\n- 50 iters by default"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
------------------------------------------------
Recipe: "Recipe: Rav3n_pl GAB v0.6 loss"
Rating: {"points"=>"NODATA", "usage"=>"-1", "avg"=>"4.8", "votes"=>"184"}
Context: {"parent"=>"1", "children"=>37, "authors"=>{"Rav3n_pl"=>{"solo"=>"26", "evolve"=>"75"}}, "best-for-list"=>[""]}
Expressed: {"comments"=>"7", "sentiment_analysis"=>{"beginning"=>{:count=>0, :context=>[]}, "start"=>{:count=>1, :context=>["My_Start_End_Rav3n_pl GAB v0.5 loss"]}, "middle"=>{:count=>0, :context=>[]}, "end"=>{:count=>2, :context=>["\n<!--//--><![CDATA[//><!--\njQuery.extend(Drupal.settings, { \"basePath\": \"/portal/\", \"fivestar\": { \"titleUser\": \"Your rating: \", \"titleAverage\": \"Rating: \", \"feedbackSavingVote\": \"Saving your vote...\", \"feedbackVoteSaved\": \"Vote saved.\", \"feedbackDeletingVote\": \"Deleting your vote...\", \"feedbackVoteDeleted\": \"Vote removed.\" }, \"googleanalytics\": { \"trackOutgoing\": 1, \"trackMailto\": 1, \"trackDownload\": 1, \"trackDownloadExtensions\": \"7z|aac|avi|csv|doc|exe|flv|gif|gz|jpe?g|js|mp(3|4|e?g)|mov|pdf|phps|png|ppt|rar|sit|tar|torrent|txt|wma|wmv|xls|xml|zip\" }, \"extra_voting_forms\": { \"only_one_vote\": 1, \"login_page\": \"portal/user/login\", \"base_path\": \"/portal/\" } });\n//--><!]]>\n", "My_Start_End_Rav3n_pl GAB v0.5 loss"]}, "long"=>{:count=>0, :context=>[]}, "fast"=>{:count=>0, :context=>[]}, "quick"=>{:count=>0, :context=>[]}, "score"=>{:count=>1, :context=>["Great script! It preforms exactly as advertised and seems to require less CPU than many scripts. Advanced my score over 200 points at early stage. Thanks, Rav3n!"]}, "great"=>{:count=>2, :context=>["Great script! It preforms exactly as advertised and seems to require less CPU than many scripts. Advanced my score over 200 points at early stage. Thanks, Rav3n!", "Not exactly sure what this script does lol, but it works great like all your scripts do."]}, "smart"=>{:count=>0, :context=>[]}, "bug"=>{:count=>0, :context=>[]}, "thank"=>{:count=>2, :context=>["Great script! It preforms exactly as advertised and seems to require less CPU than many scripts. Advanced my score over 200 points at early stage. Thanks, Rav3n!", "that any script can cause less or more CPU usage when run, but thanks :)"]}, "slow"=>{:count=>0, :context=>[]}, "need"=>{:count=>1, :context=>["\n  To download recipes to your cookbook, you need to have the game client running.\n    \n"]}, "prerequisite"=>{:count=>0, :context=>[]}, "huge"=>{:count=>0, :context=>[]}, "initial"=>{:count=>0, :context=>[]}, "hours"=>{:count=>0, :context=>[]}, "forever"=>{:count=>0, :context=>[]}, "old"=>{:count=>2, :context=>["Rav3n_pl GAB v0.6 loss | Foldit", "\n.fivestar-widget { text-align: left; }\n#byline {color: grey; font-size: 9pt;}\n#description { font-size: 12pt; margin-left: 24pt;}\n#rating {font-size:10pt; margin-top: 0px; padding: 2px; width: 400px;}\n#rating label {font-weight: bold; display: none;}\n#rating { font-size: 9pt !important; line-height: 1.4;}\n.panel li { margin-bottom: 6px; }\n\n"]}, "new"=>{:count=>1, :context=>["I'am fairly new to this, but this seems very effective, so far. Got to 3rd place using mostly this."]}, "intermedia"=>{:count=>0, :context=>[]}, "early"=>{:count=>2, :context=>["Great script! It preforms exactly as advertised and seems to require less CPU than many scripts. Advanced my score over 200 points at early stage. Thanks, Rav3n!", "+ added maxCI variable (1 is default, lower make only sense in early game)\n* changed keep score to 0.1 (to kill non-scoring critters)\n+ fixed herd reboot setting (big bug, noone reported!)\n* changed default bands settings"]}, "late"=>{:count=>1, :context=>["Rav3n_pl GAB v0.6 loss  LateSpeedOpt"]}, "improve"=>{:count=>0, :context=>[]}, "restore"=>{:count=>0, :context=>[]}, "fix"=>{:count=>0, :context=>[]}, "probe"=>{:count=>0, :context=>[]}, "test"=>{:count=>2, :context=>["Contests", "Rav3n_pl GAB v0.7 test"]}, "stabili"=>{:count=>0, :context=>[]}, "longer"=>{:count=>0, :context=>[]}, "modifi"=>{:count=>0, :context=>[]}, "best"=>{:count=>1, :context=>["Best For"]}, "repear"=>{:count=>0, :context=>[]}, "recurs"=>{:count=>0, :context=>[]}, "team"=>{:count=>0, :context=>[]}, "compete"=>{:count=>0, :context=>[]}, "unfair"=>{:count=>0, :context=>[]}, "defect"=>{:count=>0, :context=>[]}}}
#
